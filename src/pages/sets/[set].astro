---
import EncounterCard from "../../components/encounter-card";
import Layout from "../../layouts/Layout.astro";
import { createEngine } from "../../utils/liquid";
import { getCollection } from "astro:content";
export async function getStaticPaths() {
  const posts = await getCollection("sets");
  return posts.map((set) => ({
    params: { set: set.id },
    props: { set },
  }));
}

const { set } = Astro.props;
const scale = 0.5;
const sets = [set.data];

const engine = createEngine({ sets: sets });
---

<Layout title={set.data.name}>
  <div class="flex flex-col gap-12 mt-20">
    <div
      class="container m-auto flex flex-col gap-4 items-center justify-center"
    >
      <span class="text-4xl font-dark-souls">{set.data.name}</span>
      <span class="text-2xl">Level 1 Encounters</span>
    </div>

    <div
      class="w-full grid grid-cols-1 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-8 justify-center border-t border-zinc-800 bg-zinc-900/50 p-9"
    >
      {
        set.data.encounters
          .filter((encounter) => encounter.difficulty === "1")
          .map((encounter) => (
            <div class="w-full flex items-center justify-center">
              <EncounterCard
                engine={engine}
                encounter={encounter}
                sets={sets}
                scale={scale}
              />
            </div>
          ))
      }
      <div class="w-full flex items-center justify-center">
        <div
          class="border border-zinc-700 border-dotted rounded-xl flex items-center justify-center text-4xl font-dark-souls text-center text-white/50 transition-colors cursor-pointer hover:border-zinc-500 hover:text-white/90"
          style={{
            width: `${807 * scale}px`,
            height: `${1397 * scale}px`,
          }}
        >
          Add New Card
        </div>
      </div>
    </div>
  </div>
</Layout>
